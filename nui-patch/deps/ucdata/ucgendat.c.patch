diff --git a/deps/ucdata/ucgendat.c b/deps/ucdata/ucgendat.c
index 371572d..c485fd7 100644
--- a/deps/ucdata/ucgendat.c
+++ b/deps/ucdata/ucgendat.c
@@ -1660,7 +1660,7 @@ char *opath;
   resetseparator();
   fprintf(out, "const uint16_t ctype_props_offsets[] = {\n  ");
   //fwrite((char *) propcnt, sizeof(uint16_t), nprops, out);
-  for (uint32_t i = 0; i < nprops; i++)
+  for (i = 0; i < nprops; i++)
   {
     outseparator(out);
     fprintf(out, "0x%04x", propcnt[i]);
@@ -1672,12 +1672,12 @@ char *opath;
    */
   resetseparator();
   fprintf(out, "const uint32_t ctype_props[] = {\n  ");
-  uint32_t cnt = 0;
   for (i = 0; i < NUMPROPS; i++)
   {
     if (proptbl[i].used > 0)
     {
-      for (uint32_t j = 0; j < proptbl[i].used; j++)
+      uint32_t j;
+      for (j = 0; j < proptbl[i].used; j++)
       {
         outseparator(out);
         //fwrite((char *) proptbl[i].ranges, sizeof(uint32_t), proptbl[i].used, out);
@@ -1725,7 +1725,7 @@ char *opath;
    * Write the upper case table.
    */
   //fwrite((char *) upper, sizeof(_case_t), upper_used, out);
-  for (uint32_t i = 0; i < upper_used; i++)
+  for (i = 0; i < upper_used; i++)
   {
     outseparator(out);
     fprintf(out, "0x%08x", upper[i].key);
@@ -1739,7 +1739,7 @@ char *opath;
    * Write the lower case table.
    */
   //fwrite((char *) lower, sizeof(_case_t), lower_used, out);
-  for (uint32_t i = 0; i < lower_used; i++)
+  for (i = 0; i < lower_used; i++)
   {
     outseparator(out);
     fprintf(out, "0x%08x", lower[i].key);
@@ -1753,7 +1753,7 @@ char *opath;
    * Write the title case table.
    */
   //fwrite((char *) title, sizeof(_case_t), title_used, out);
-  for (uint32_t i = 0; i < title_used; i++)
+  for (i = 0; i < title_used; i++)
   {
     outseparator(out);
     fprintf(out, "0x%08x", title[i].key);
@@ -1805,7 +1805,7 @@ char *opath;
     //fwrite((char *) comps, sizeof(_comp_t), comps_used, out);
     resetseparator();
     fprintf(out, "const uint32_t comp_list[] = {\n  ");
-    for (uint32_t i = 0; i < comps_used; i++)
+    for (i = 0; i < comps_used; i++)
     {
       outseparator(out);
       fprintf(out, "0x%08x", comps[i].comp);
@@ -1867,7 +1867,7 @@ char *opath;
     fprintf(out, "uint32_t decomps_size = %d;\n", decomps_used);
     resetseparator();
     fprintf(out, "const uint32_t decomps_list[] = {\n  ");
-    for (uint32_t i = idx = 0; i < decomps_used; i++)
+    for (i = idx = 0; i < decomps_used; i++)
     {
       outseparator(out);
       fprintf(out, "0x%08x", decomps[i].code);
@@ -1893,7 +1893,8 @@ char *opath;
     for (i = 0; i < decomps_used; i++)
     {
       //fwrite((char *) decomps[i].decomp, sizeof(uint32_t), decomps[i].used, out);
-      for (uint32_t j = 0; j < decomps[i].used; j++)
+      uint32_t j;
+      for (j = 0; j < decomps[i].used; j++)
       {
         outseparator(out);
         fprintf(out, "0x%08x", decomps[i].decomp[j]);
